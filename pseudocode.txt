pseudocode:

für jede klasse, jeden Tag, jeden slot, nimm 1 lehrer, 1 raum, 1 fach
    1{timetable(C,D,E,A,B,G,F):teacher(E), room(F), subject(G)}1 :- class(A,B), weekday(C), slot(D).
   
schau ob lehrer auch das fach unterrichtet
    :- timetable(W,S,T,C,N,J,R), teacher(T), subject(J), not teaches(T,J).

schau ob falls fachunterricht auch fachraum ist
    :- timetable(...,S,R,..), subject(S), S=phy, room(R) = 1 (phyroom). etc

schau ob raum doppelt belegt zur gleichen zeit
    :- 2x timetable, tag1 = tag2, slot1 = slot2, classe1 != classe2, raum1 = raum2. 

schau ob lehrer doppelt belegt ist
    analog

zähle in timetable wie oft ein fach unterrichtet wird (count) und vergleiche mit sollwert
    addEmployee("tjb1998", "eva", "mcdowell", "ra", 55000, 20).
addEmployee("tjb1987x", "ben", "xena", "cdt", 68000, q50).
addEmployee("tjb2112", "ryoko", "hakubi", "ra", 63000, 60).
addEmployee("tjb1987", "ben", "croshaw", "cdt", 60000, 90).
addEmployee("tjb3300m", "amane", "mauna", "ma", 61000, 105).


getType(P, X) :- addEmployee(X, _, _, P, _, _).

type(P) :- addEmployee(_, _, _, P, _, _).

result(P, S) :- S = #count{ I : getType(P,I)}, type(P).

S = #count{I: timetable(X,Y,Z,....)}, class(X,Y), subject(Z).
:- S!= sollwert

zähle in timetable wie viel ein lehrer unterrichtet und vergleiche mit sollwert 
    S = #count{I: timetable(...X.......)}, teacher(X).
    :- S!= maxHours(X). 

schau ob klassenlehrer mehr als X stunden in einer klasse unterrichtet 
    analog
